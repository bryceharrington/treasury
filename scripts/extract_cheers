#!/usr/bin/python

import ledger

DONATION_RANGES = [
    5,
    10,
    25,
    50,
    100,
    250,
    500,
    2000,
    5000,
    10000
    ]

cheers = []

def get_memo(note):
    if note is None:
        return None
    if "Memo:" not in note:
        return None

    note_lines = post.note.split("\n")
    for line in note_lines:
        if "Memo:" in line:
            memo = line.split("Memo:")[-1]
            memo = memo.strip()
            if memo != '':
                return memo
    return None

def get_donation_range(amount):
    if amount < DONATION_RANGES[0]:
        return None
    for i in range(1, len(DONATION_RANGES)):
        if amount < DONATION_RANGES[i]:
            return "%d-%d USD" %((DONATION_RANGES[i-1], DONATION_RANGES[i]))
    return ">%d (%d)" %(DONATION_RANGES[i], amount)

if __name__ == "__main__":
    import sys
    import json

    if len(sys.argv) < 2:
        sys.stderr.write(("usage: extract_cheers <ledger_file>\n"))
        sys.exit(1)
    ledger_file = sys.argv[1]
    session = ledger.read_journal(ledger_file)

    i = 0
    for post in session.query("register Donations"):
        memo = get_memo(post.note)
        amount = get_donation_range(post.amount.negated())
        if memo is None or amount is None:
            continue
        cheer = {
            'id': i,
            'amount': amount,
            'memo': get_memo(post.note),
            'month': post.date.month,
            'year': post.date.year
        }
        cheers.append(cheer)
        i += 1

    print(json.dumps(cheers, indent=4, sort_keys=True, ensure_ascii=False))
